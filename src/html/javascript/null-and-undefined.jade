// 記事テンプレート
extends ../template

// 記事のタイトルをココに
block title
	title Javascript: nullとundefined, NaN

// 記事本文
block contents
	h1 nullとundefined, NaN
	section
		div.
			Javascriptの値である、nullとundefinedとNaNについて解説します。
			「無効な値」としてよく出てきますが、それぞれ違うものなので混同しないように。

	section
		h1 nullとundefined
		div.
			まずはnullとundefinedの例。
			比較的似た者同士。

		script(title="unllとundefined", type="code/Javascript").
			// 変数の定義
			var a;
			var b = null;
			console.log(a); // 宣言しただけではなにも代入していないのでundefined
			console.log(b); // 明示的にnullを代入しているのでnull

			// 新しいオブジェクトを作成
			var obj = {
				A:"string A!",
			};
			console.log(obj.A); // -> "string A!"
			console.log(obj.B); // まだプロパティを定義していないのでundefined

		div.
			undefinedは「未定義」の意味であり、varで変数を宣言したが代入されていないもの、またはオブジェクトの存在しないプロパティがundefinedとして判定されます。
		div.
			対してnullは明示的に代入されたものなので、誰かが意図してnullに設定したものです。
			デバッグ時にundefinedが出てきたら、スペルミスの場合も多々あります。

	section
		h1 NaN (not a number)
		div.
			NaNとは、「not a number」の略です。その名のとおり、変数が「数字ではない」状態。正確には「数字になりたかったのになれなかった数字」です。
			計算式で、暗黙の型変換で数字として扱えなかった場合にNaNが返されます。

		script(title="NaN", type="code/Javascript").
			var a = 1; // Number:1
			var b = "ABC"; // String:ABC

			console.log(a / 2); // Number:0.5
			console.log(a / b); // 1 ÷ "ABC"が計算できずにNaNになる

	section
		h1 NaNの判定方法
		div.
			NaNの判定はちょっと特殊です。<code>===</code>による判定ができません！

		script(title="NaNの比較", type="code/Javascript").
			// NaN同士はイコールではない！
			console.log(NaN == NaN); // false;
			console.log(NaN === NaN); // false;

			// NaN同士は違うオブジェクト?!
			console.log(NaN != NaN); // true;
			console.log(NaN !== NaN); // true;

		div なんと、NaN同士はイコールになりません。
		div そのかわり、<code>!==</code>でtrueと判定されます。なんてステキなあまのじゃく。
		div イコール演算子の存在意義を否定するような動作ですが、同一オブジェクトにも関わらず"イコールではない"と判定されるのはNaNだけです。
		div <code>value !== value</code>なので間違えないように。
		div <code>value !== NaN</code>だとNaN以外の全てがtrueになるので使えません。

		div.
			NaNそのものを判定するケースは少なく、「数字であるか？」の様なパラメータチェック的な用途が多いと思います。
			それをプロジェクトのフレームワークとして提供するのがいいでしょう。
			共通化しておけば、もし判定ロジックにバグがあっても修正は一箇所で済みます。

	section
		h1 まとめ
		ul
			li undefinedは変数がまだ初期化されていない、またはプロパティがない
			li nullは代入済み
			li NaNは数字になれなかったヤツ
			li NaNを判定するには<code>value !== value</code>を使う

		div 補足：NaNそのものをチェックする<code>Number.isNaN</code>関数がありますが、ES6提案であり、IEでは使えません。
		+exlink('Number.isNaN()', 'https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN')
		+infolink('数値判定(isNumeric)関数の作成', '../framework/function-isNumeric')

// ライター情報
block writer
	include ../persons/TomoYoshida